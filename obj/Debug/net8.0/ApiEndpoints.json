[
  {
    "ContainingType": "WeatherApp.Controllers.CitiesController",
    "Method": "GetCities",
    "RelativePath": "api/Cities",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[WeatherApp.DTOs.City.CityResponseDto, WeatherApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WeatherApp.Controllers.CitiesController",
    "Method": "AddCity",
    "RelativePath": "api/Cities",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cityRequestDto",
        "Type": "WeatherApp.DTOs.City.CityRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.Controllers.CitiesController",
    "Method": "GetCity",
    "RelativePath": "api/Cities/{cityId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cityId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "WeatherApp.DTOs.City.CityResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WeatherApp.Controllers.ForecastsController",
    "Method": "AddForecast",
    "RelativePath": "api/Forecasts",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "forecastDto",
        "Type": "WeatherApp.DTOs.Forecast.ForecastRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.Controllers.ForecastsController",
    "Method": "GetForecastsByCityId",
    "RelativePath": "api/Forecasts/{cityId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cityId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[WeatherApp.DTOs.Forecast.ForecastResponseDto, WeatherApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WeatherApp.Controllers.ForecastsController",
    "Method": "DeleteForecast",
    "RelativePath": "api/Forecasts/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.Controllers.WeathersController",
    "Method": "AddWeather",
    "RelativePath": "api/Weathers",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "weatherDto",
        "Type": "WeatherApp.DTOs.Weather.WeatherRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.Controllers.WeathersController",
    "Method": "GetWeatherByCityId",
    "RelativePath": "api/Weathers/{cityId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cityId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "WeatherApp.DTOs.Weather.WeatherResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WeatherApp.Controllers.WeathersController",
    "Method": "UpdateWeather",
    "RelativePath": "api/Weathers/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "weatherDto",
        "Type": "WeatherApp.DTOs.Weather.WeatherRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]